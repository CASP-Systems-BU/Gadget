################################################################ build the first event generator 
# Here we build our own event generator (not reading for event files)
#options: (tracefile, gadget)
first.event.generator.type = gadget

#=== key popularity distribution for the first event generator =======
#options(constant, hotspot, zipf, sequential, uniform)
first.event.generator.key.popularity.distrib.type = zipf
first.event.generator.key.popularity.distrib.params.s = 1
first.event.generator.key.popularity.distrib.params.keyspacesize= 1000000

#==== event time distribution for the first event generator
#options(exponential, normal, constant, uniform)
first.event.generator.event.occurrence.gap.distrib.type = exponential
first.event.generator.event.occurrence.gap.distrib.params.lambda= 10
first.event.generator.watermark.frequency = 1
first.event.generator.outoforder.percentage = 2
first.event.generator.lateness.threshold = 3;




################################################################ build the operator
#options(tumbling.all.incremental, tumbling.all.holistic, tumbling.keyed.incremental,
#tumbling.keyed.holistic, sliding.all.incremental, sliding.all.holistic, sliding.keyed.incremental,
#sliding.keyed.holistic, join.tumbling,  join.sliding, join.interval, continuous.join,  flink.replayer, ycsb.replayer)
operator.type= tumbling.keyed.incremental
expected.num.operations = 100000
window.length = 5
#sliding.length = 1
#upper.bound = 180
#lower.bound = -120

#******* make a key popularity distribution for the windows key (keys used to access state store) (no need to change this) 
#options(constant, hotspot, zipf, sequential, uniform)
operator.key.popularity.distrib.type = sequential
operator.key.popularity.distrib.params.keyspacesize = 1000000000

#options(exponential, constant, uniform, normal)
#********  key size distribution (keys used to access state store)
operator.key.size.distrib.type = constant
operator.key.size.distrib.params.constant = 10

#******** value size distribution (values that are inserted to state store)
#options(exponential, constant, uniform, normal)
operator.value.size.distrib.type = constant
operator.value.size.distrib.params.constant = 10

################################################################### build the wrapper ( where the generated operations go- file or a DB)
# options( file - rocksdb- lethe- berkeley - faster)- If file is chosen  Gadget dumps the generated operations on the file (wrapper.path/gadget.log)
wrapper.type = file
wrapper.path = .











